// Generated by view binder compiler. Do not edit!
package com.example.bffdiabetes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.bffdiabetes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPredictStateBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView currentTextWrite;

  @NonNull
  public final TextView currentTextWrite1;

  @NonNull
  public final TextView currentTextWrite2;

  @NonNull
  public final TextView currentTextview;

  @NonNull
  public final TextView mesajPredict;

  @NonNull
  public final TextView statePredict;

  @NonNull
  public final TextView stateTextPredict;

  @NonNull
  public final TextView tipsPredict;

  private ActivityPredictStateBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView currentTextWrite, @NonNull TextView currentTextWrite1,
      @NonNull TextView currentTextWrite2, @NonNull TextView currentTextview,
      @NonNull TextView mesajPredict, @NonNull TextView statePredict,
      @NonNull TextView stateTextPredict, @NonNull TextView tipsPredict) {
    this.rootView = rootView;
    this.currentTextWrite = currentTextWrite;
    this.currentTextWrite1 = currentTextWrite1;
    this.currentTextWrite2 = currentTextWrite2;
    this.currentTextview = currentTextview;
    this.mesajPredict = mesajPredict;
    this.statePredict = statePredict;
    this.stateTextPredict = stateTextPredict;
    this.tipsPredict = tipsPredict;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPredictStateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPredictStateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_predict_state, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPredictStateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView currentTextWrite = rootView.findViewById(R.id.current_text_write);
      if (currentTextWrite == null) {
        missingId = "currentTextWrite";
        break missingId;
      }
      TextView currentTextWrite1 = rootView.findViewById(R.id.current_text_write_1);
      if (currentTextWrite1 == null) {
        missingId = "currentTextWrite1";
        break missingId;
      }
      TextView currentTextWrite2 = rootView.findViewById(R.id.current_text_write_2);
      if (currentTextWrite2 == null) {
        missingId = "currentTextWrite2";
        break missingId;
      }
      TextView currentTextview = rootView.findViewById(R.id.current_textview);
      if (currentTextview == null) {
        missingId = "currentTextview";
        break missingId;
      }
      TextView mesajPredict = rootView.findViewById(R.id.mesaj_predict);
      if (mesajPredict == null) {
        missingId = "mesajPredict";
        break missingId;
      }
      TextView statePredict = rootView.findViewById(R.id.state_predict);
      if (statePredict == null) {
        missingId = "statePredict";
        break missingId;
      }
      TextView stateTextPredict = rootView.findViewById(R.id.state_text_predict);
      if (stateTextPredict == null) {
        missingId = "stateTextPredict";
        break missingId;
      }
      TextView tipsPredict = rootView.findViewById(R.id.tips_predict);
      if (tipsPredict == null) {
        missingId = "tipsPredict";
        break missingId;
      }
      return new ActivityPredictStateBinding((RelativeLayout) rootView, currentTextWrite,
          currentTextWrite1, currentTextWrite2, currentTextview, mesajPredict, statePredict,
          stateTextPredict, tipsPredict);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
