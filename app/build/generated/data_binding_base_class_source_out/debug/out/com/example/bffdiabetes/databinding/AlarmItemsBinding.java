// Generated by view binder compiler. Do not edit!
package com.example.bffdiabetes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.bffdiabetes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AlarmItemsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView active›mage;

  @NonNull
  public final TextView recycleDateTime;

  @NonNull
  public final TextView recycleRepeat›nfo;

  @NonNull
  public final TextView recycleTitle;

  @NonNull
  public final ImageView thumbnail›mage;

  private AlarmItemsBinding(@NonNull RelativeLayout rootView, @NonNull ImageView active›mage,
      @NonNull TextView recycleDateTime, @NonNull TextView recycleRepeat›nfo,
      @NonNull TextView recycleTitle, @NonNull ImageView thumbnail›mage) {
    this.rootView = rootView;
    this.active›mage = active›mage;
    this.recycleDateTime = recycleDateTime;
    this.recycleRepeat›nfo = recycleRepeat›nfo;
    this.recycleTitle = recycleTitle;
    this.thumbnail›mage = thumbnail›mage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AlarmItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AlarmItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.alarm_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AlarmItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView active›mage = rootView.findViewById(R.id.active_image);
      if (active›mage == null) {
        missingId = "active›mage";
        break missingId;
      }
      TextView recycleDateTime = rootView.findViewById(R.id.recycle_date_time);
      if (recycleDateTime == null) {
        missingId = "recycleDateTime";
        break missingId;
      }
      TextView recycleRepeat›nfo = rootView.findViewById(R.id.recycle_repeat_info);
      if (recycleRepeat›nfo == null) {
        missingId = "recycleRepeat›nfo";
        break missingId;
      }
      TextView recycleTitle = rootView.findViewById(R.id.recycle_title);
      if (recycleTitle == null) {
        missingId = "recycleTitle";
        break missingId;
      }
      ImageView thumbnail›mage = rootView.findViewById(R.id.thumbnail_image);
      if (thumbnail›mage == null) {
        missingId = "thumbnail›mage";
        break missingId;
      }
      return new AlarmItemsBinding((RelativeLayout) rootView, active›mage, recycleDateTime,
          recycleRepeat›nfo, recycleTitle, thumbnail›mage);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
