// Generated by view binder compiler. Do not edit!
package com.example.bffdiabetes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.bffdiabetes.R;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGraphBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView graphviewPredicted;

  @NonNull
  public final TextView graphviewReal;

  @NonNull
  public final TextView graphviewRealTextview;

  @NonNull
  public final LineChart lineChartPredicted;

  @NonNull
  public final LineChart lineChartReal;

  @NonNull
  public final ImageButton playCircle;

  @NonNull
  public final ImageButton playCircle1;

  private ActivityGraphBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView graphviewPredicted, @NonNull TextView graphviewReal,
      @NonNull TextView graphviewRealTextview, @NonNull LineChart lineChartPredicted,
      @NonNull LineChart lineChartReal, @NonNull ImageButton playCircle,
      @NonNull ImageButton playCircle1) {
    this.rootView = rootView;
    this.graphviewPredicted = graphviewPredicted;
    this.graphviewReal = graphviewReal;
    this.graphviewRealTextview = graphviewRealTextview;
    this.lineChartPredicted = lineChartPredicted;
    this.lineChartReal = lineChartReal;
    this.playCircle = playCircle;
    this.playCircle1 = playCircle1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGraphBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGraphBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_graph, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGraphBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView graphviewPredicted = rootView.findViewById(R.id.graphview_predicted);
      if (graphviewPredicted == null) {
        missingId = "graphviewPredicted";
        break missingId;
      }
      TextView graphviewReal = rootView.findViewById(R.id.graphview_real);
      if (graphviewReal == null) {
        missingId = "graphviewReal";
        break missingId;
      }
      TextView graphviewRealTextview = rootView.findViewById(R.id.graphview_real_textview);
      if (graphviewRealTextview == null) {
        missingId = "graphviewRealTextview";
        break missingId;
      }
      LineChart lineChartPredicted = rootView.findViewById(R.id.lineChart_predicted);
      if (lineChartPredicted == null) {
        missingId = "lineChartPredicted";
        break missingId;
      }
      LineChart lineChartReal = rootView.findViewById(R.id.lineChart_real);
      if (lineChartReal == null) {
        missingId = "lineChartReal";
        break missingId;
      }
      ImageButton playCircle = rootView.findViewById(R.id.play_circle);
      if (playCircle == null) {
        missingId = "playCircle";
        break missingId;
      }
      ImageButton playCircle1 = rootView.findViewById(R.id.play_circle_1);
      if (playCircle1 == null) {
        missingId = "playCircle1";
        break missingId;
      }
      return new ActivityGraphBinding((RelativeLayout) rootView, graphviewPredicted, graphviewReal,
          graphviewRealTextview, lineChartPredicted, lineChartReal, playCircle, playCircle1);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
