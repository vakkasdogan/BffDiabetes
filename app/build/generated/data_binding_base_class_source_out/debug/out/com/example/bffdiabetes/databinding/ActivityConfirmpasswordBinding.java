// Generated by view binder compiler. Do not edit!
package com.example.bffdiabetes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import com.example.bffdiabetes.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfirmpasswordBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AppCompatButton appCompatButtonReset;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextInputLayout textInputConfirmPass;

  @NonNull
  public final TextInputEditText textInputConfirmPassword;

  @NonNull
  public final TextInputLayout textInputLayoutEmail;

  @NonNull
  public final TextInputEditText textInputpass;

  private ActivityConfirmpasswordBinding(@NonNull NestedScrollView rootView,
      @NonNull AppCompatButton appCompatButtonReset, @NonNull NestedScrollView nestedScrollView,
      @NonNull TextInputLayout textInputConfirmPass,
      @NonNull TextInputEditText textInputConfirmPassword,
      @NonNull TextInputLayout textInputLayoutEmail, @NonNull TextInputEditText textInputpass) {
    this.rootView = rootView;
    this.appCompatButtonReset = appCompatButtonReset;
    this.nestedScrollView = nestedScrollView;
    this.textInputConfirmPass = textInputConfirmPass;
    this.textInputConfirmPassword = textInputConfirmPassword;
    this.textInputLayoutEmail = textInputLayoutEmail;
    this.textInputpass = textInputpass;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfirmpasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfirmpasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_confirmpassword, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfirmpasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      AppCompatButton appCompatButtonReset = rootView.findViewById(R.id.appCompatButtonReset);
      if (appCompatButtonReset == null) {
        missingId = "appCompatButtonReset";
        break missingId;
      }
      NestedScrollView nestedScrollView = rootView.findViewById(R.id.nestedScrollView);
      if (nestedScrollView == null) {
        missingId = "nestedScrollView";
        break missingId;
      }
      TextInputLayout textInputConfirmPass = rootView.findViewById(R.id.textInputConfirmPass);
      if (textInputConfirmPass == null) {
        missingId = "textInputConfirmPass";
        break missingId;
      }
      TextInputEditText textInputConfirmPassword = rootView.findViewById(R.id.textInputConfirmPassword);
      if (textInputConfirmPassword == null) {
        missingId = "textInputConfirmPassword";
        break missingId;
      }
      TextInputLayout textInputLayoutEmail = rootView.findViewById(R.id.textInputLayoutEmail);
      if (textInputLayoutEmail == null) {
        missingId = "textInputLayoutEmail";
        break missingId;
      }
      TextInputEditText textInputpass = rootView.findViewById(R.id.textInputpass);
      if (textInputpass == null) {
        missingId = "textInputpass";
        break missingId;
      }
      return new ActivityConfirmpasswordBinding((NestedScrollView) rootView, appCompatButtonReset,
          nestedScrollView, textInputConfirmPass, textInputConfirmPassword, textInputLayoutEmail,
          textInputpass);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
